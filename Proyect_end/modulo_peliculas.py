# -*- coding: utf-8 -*-
"""Copia de PROYECTO.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13AtiEQgfIS4vSe6pmEAVVAF2NZm-1N1v
"""

def crear_pelicula(nombre: str, genero: str, duracion: int, anio: int,
                  clasificacion: str, hora: int, dia: str) -> dict:
    pelicula={'nombre':nombre, 'genero':genero, 'duracion':duracion, 'anio':anio, 'clasificacion':clasificacion, 'hora':hora, 'dia':dia}
    return pelicula

p1=crear_pelicula('Shrek','Familiar' 'Comedia',92, 2001,'Todos',1700, 'Viernes')
p2=crear_pelicula('Get Out','Suspenso, Terror',104, 2017,'18+',2330, 'Sábado')
p3=crear_pelicula ("Icarus",  "Documental, Suspenso", 122, 2017, '18+', 800, "Domingo")
p4=crear_pelicula('Inception','Acción, Drama' 'Comedia',148, 2010,'13+',1300, 'Lunes')
p5=crear_pelicula('The Empire Strikes Back', 'Familiar, Ciencia-Ficción',124,1980,'7+',1415, 'Miércoles')
p6=crear_pelicula('Icarus','Documental, Suspenso',122,  2017,'18+',800, 'Domingo')
p7=crear_pelicula('Fractura','Suspenso, Misterio',120, 2018,'13+',1700, 'lunes')
p8=crear_pelicula('Sonic','familiar, comedia',122,  2020,'todos',800, 'Domingo')
p9=crear_pelicula('Guerra Mundial Z','accion,suspenso',156, 2013,'+13',1300,'lunes')
p10=crear_pelicula('Otro día para matar','accion',104, 2014,'+13',1700, 'Viernes')

d={p1['nombre']:p1, p2['nombre']:p2, p3['nombre']:p3, p4['nombre']:p4, p5['nombre']:p5, p6['nombre']:p6, p7['nombre']:p7, p8['nombre']:p8, p9['nombre']:p9, p10['nombre']:p10}

print(d['Shrek'])

def encontrar_pelicula(nombre_pelicula: str, p1: dict, p2: dict, p3: dict, p4: dict,  p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict) -> dict:
  peliculas=[p1, p2, p3, p4, p5,p6,p7,p8,p9,p10]
  for pelicula in peliculas:
    if pelicula['nombre']==nombre_pelicula:
      return pelicula
  return None
print(encontrar_pelicula('cars',p1,p2,p3,p4,p5,p6,p7,p8,p9,p10))

l=[p1['duracion'], p2['duracion'], p3['duracion'], p4['duracion'], p5['duracion'], p6['duracion'], p7['duracion'], p8['duracion'], p9['duracion'], p10['duracion']]
print(l)
print(max(l))

def encontrar_pelicula_mas_larga(p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict) -> dict:
  l=[p1['duracion'], p2['duracion'], p3['duracion'], p4['duracion'], p5['duracion']]
  peliculas=[p1, p2, p3, p4, p5]
  for pelicula in peliculas:
    if pelicula['duracion']==max(l):
      return pelicula

encontrar_pelicula_mas_larga(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10)

def duracion_promedio(p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict) -> str:
  l=[p1['duracion'], p2['duracion'], p3['duracion'], p4['duracion'], p5['duracion']]
  promedio_horas=int((sum(l)/len(l)/60))
  promedio_minutos=int(sum(l)/len(l)%60)
  promedio=f'{promedio_horas}:{promedio_minutos}'
  return promedio
  print(duracion_promedio(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10))

duracion_promedio(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10)

def encontrar_estrenos(anio: int, p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict) -> str:
  peliculas=[p1, p2, p3, p4, p5,p6,p7,p8,p9,p10]
  estrenos=[]
  for pelicula in peliculas:
    if pelicula['anio']==anio:
      estrenos.append(pelicula)
  if len(estrenos)==0:
    print('No hay estrenos en este año')
  return estrenos

encontrar_estrenos(2006,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10)

def cuantas_peliculas_18_mas(p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict) -> int:
  peliculas=[p1, p2, p3, p4, p5,p6,p7,p8,p9,p10]
  contador = 0
  for pelicula in peliculas:
    if pelicula['clasificacion']=='18+':
      contador+=1
  return contador

cuantas_peliculas_18_mas(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10)

def reagendar_pelicula(peli:dict, nueva_hora: int, nuevo_dia: str, control_horario: bool, p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict)->bool:
  peliculas=[p1, p2, p3, p4, p5]
  dias_semana = ['lunes', 'martes', 'miércoles', 'jueves', 'viernes']
  nombres=[]
  horas=[]
  dias=[]
  if nuevo_dia in dias_semana and (nueva_hora >= 2300 or nueva_hora < 600):
        return False
  for pelicula in peliculas:
    nombres.append(pelicula['nombre'])
    horas.append(pelicula['hora'])
    dias.append(pelicula['dia'])
    if pelicula['genero']=='documental' and nueva_hora>=2200:
      return False
    if pelicula['genero']=='drama' and nuevo_dia=='viernes':
      return False
  if control_horario==True:
    if (nueva_hora in horas) and (nuevo_dia in dias):
      return False
    else:
      peli['hora']=nueva_hora
      peli['dia']=nuevo_dia
      return True

print(reagendar_pelicula(p2,1700,'viernes',True,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10))

def decidir_invitar(peli: dict, edad_invitado: int, autorizacion_padres: bool)->bool:
  if (peli['clasificacion']=='18+') and (edad_invitado<18) and (autorizacion_padres==False):
    return False
  if (peli['genero'] == 'Terror') and (edad_invitado < 15):
        return False
  if (edad_invitado <= 10) and (peli['genero'] != 'Familiar'):
        return False
  if (peli['clasificacion'] == '18+') and (edad_invitado < 18) and (peli['genero'] != 'Documental') and (autorizacion_padres == False):
        return False
  else:
    return True

decidir_invitar(p2,17,False)